apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/component: server
data:
  prometheus.yaml: |-
    global:
      external_labels:
        monitor: prometheus
    alerting:
      alertmanagers:
        - static_configs:
            - targets: ['alertmanager.monitoring.svc.cluster.local:9093']
    rule_files:
      - /etc/prometheus/rules.yaml
    scrape_configs:
      - job_name: prometheus
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - {{ .Values.namespace }}
        metrics_path: /metrics
        relabel_configs:
          # ... (your existing relabel configs here) ...
          - source_labels:
              - __address__
            target_label: __tmp_hash
            modulus: 1
            action: hashmod

      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            regex: prometheus-node-exporter
            action: keep
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: service
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__address__]
            target_label: instance

      - job_name: 'kube-state-metrics'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            regex: kube-state-metrics
            action: keep
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            target_label: service
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__address__]
            target_label: instance

      - job_name: 'kubelet-cadvisor'
        scheme: https
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: node
        metrics_path: /metrics/cadvisor
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      - job_name: 'kubelet'
        scheme: https
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: node
        metrics_path: /metrics
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics
      - job_name: 'blackbox'
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
              - http://prometheus-server.monitoring.svc.cluster.local
              - http://grafana-grafana.monitoring.svc.cluster.local:3000
              - http://alertmanager.monitoring.svc.cluster.local:9093
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter.monitoring.svc.cluster.local:9115
      - job_name: 'pushgateway'
        static_configs:
          - targets: ['pushgateway.monitoring.svc.cluster.local:9091']
      - job_name: 'my-python-app'
        static_configs:
          - targets: ['my-python-app.default.svc.cluster.local:5000']
      - job_name: 'java-h2-audit'
        metrics_path: /actuator/prometheus
        static_configs:
          - targets: ['java-h2-audit.default.svc.cluster.local:8080']


  rules.yaml: |-
    groups:
      - name: Always-Firing-Alert
        rules:
          - alert: AlwaysFiring
            expr: vector(1)
            for: 10s
            labels:
              severity: test
            annotations:
              summary: "This is a test alert that always fires"
              description: "This alert is firing just to test the end-to-end setup"
