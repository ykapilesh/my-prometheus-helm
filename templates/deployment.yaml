apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-server
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/instance: prometheus
    app.kubernetes.io/component: server
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/instance: prometheus
      app.kubernetes.io/component: server
  template:
    metadata:
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/instance: prometheus
        app.kubernetes.io/component: server
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      automountServiceAccountToken: true
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      securityContext:
        fsGroup: {{ .Values.securityContext.fsGroup }}
      containers:
        - name: prometheus
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--config.file=/opt/bitnami/prometheus/conf/prometheus.yaml"
            - "--storage.tsdb.path=/bitnami/prometheus/data"
            - "--storage.tsdb.retention.time={{ .Values.config.retentionTime }}"
            - "--storage.tsdb.retention.size=0"
            - "--log.level=info"
            - "--log.format=logfmt"
            - "--web.listen-address=:9090"
            - "--web.console.libraries=/opt/bitnami/prometheus/conf/console_libraries"
            - "--web.console.templates=/opt/bitnami/prometheus/conf/consoles"
            - "--web.route-prefix=/"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - name: http
              containerPort: 9090
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: 5
            periodSeconds: 20
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: config
              mountPath: /opt/bitnami/prometheus/conf
              readOnly: true
            - name: data
              mountPath: /bitnami/prometheus/data
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: config
          configMap:
            name: prometheus-server
        - name: data
          emptyDir: {}
